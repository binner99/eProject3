@model Data.Product

@{
    ViewBag.Title = " Edit Product " + Model.pName;
}

<p>
    @Html.ActionLink(" Back to List", "Index", null, new { @class = "btn btn-outline-dark fa fa-arrow-left" })
</p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.pID)

        <div class="form-group">
            @Html.LabelFor(model => model.pName, htmlAttributes: new { @class = "control-label font-weight-bold" })
            <div >
                @Html.EditorFor(model => model.pName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pType, htmlAttributes: new { @class = "control-label font-weight-bold" })
            <div >
                <div class="checkbox">
                    @Html.EditorFor(model => model.pType)
                    @Html.ValidationMessageFor(model => model.pType, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.pDes, htmlAttributes: new { @class = "control-label font-weight-bold" })
            <div >
                @Html.EditorFor(model => model.pDes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pDes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row form-group">
            <div class="col">
                @Html.LabelFor(model => model.pMP, htmlAttributes: new { @class = "control-label font-weight-bold" })
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text"><i class="fa fa-rupee"></i></span></div>
                    @Html.EditorFor(model => model.pMP, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.pMP, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col">
                @Html.LabelFor(model => model.pMR, htmlAttributes: new { @class = "control-label font-weight-bold" })
                <div class="input-group">
                    <div class="input-group-prepend"><span class="input-group-text"><i class="fa fa-rupee"></i></span></div>
                    @Html.EditorFor(model => model.pMR, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.pMR, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
